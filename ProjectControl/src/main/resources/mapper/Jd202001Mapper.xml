<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luoxiang.project.mapper.Jd202001Mapper" >
  <resultMap id="BaseResultMap" type="com.luoxiang.project.po.Jd202001" >
    <result column="job_code" property="jobCode" jdbcType="VARCHAR" />
    <result column="unit_code" property="unitCode" jdbcType="VARCHAR" />
    <result column="unit_name" property="unitName" jdbcType="VARCHAR" />
    <result column="job_split" property="jobSplit" jdbcType="VARCHAR" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_desc" property="jobDesc" jdbcType="VARCHAR" />
    <result column="need_nums" property="needNums" jdbcType="VARCHAR" />
    <result column="ru_wei_bi_li" property="ruWeiBiLi" jdbcType="VARCHAR" />
    <result column="lai_yuan_lei_bie" property="laiYuanLeiBie" jdbcType="VARCHAR" />
    <result column="xue_li" property="xueLi" jdbcType="VARCHAR" />
    <result column="xue_wei" property="xueWei" jdbcType="VARCHAR" />
    <result column="zhuan_ye" property="zhuanYe" jdbcType="VARCHAR" />
    <result column="kao_shi_ke_mu" property="kaoShiKeMu" jdbcType="VARCHAR" />
    <result column="ji_shu_zi_ge" property="jiShuZiGe" jdbcType="VARCHAR" />
    <result column="zhi_ye_zi_ge" property="zhiYeZiGe" jdbcType="VARCHAR" />
    <result column="qi_ta" property="qiTa" jdbcType="VARCHAR" />
    <result column="di_dian" property="diDian" jdbcType="VARCHAR" />
    <result column="dian_hua" property="dianHua" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_code, unit_code, unit_name, job_split, job_name, job_desc, need_nums, ru_wei_bi_li, 
    lai_yuan_lei_bie, xue_li, xue_wei, zhuan_ye, kao_shi_ke_mu, ji_shu_zi_ge, zhi_ye_zi_ge, 
    qi_ta, di_dian, dian_hua
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luoxiang.project.po.Jd202001Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jd_2020_01
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.luoxiang.project.po.Jd202001Example" >
    delete from jd_2020_01
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luoxiang.project.po.Jd202001" >
    insert into jd_2020_01 (job_code, unit_code, unit_name, 
      job_split, job_name, job_desc, 
      need_nums, ru_wei_bi_li, lai_yuan_lei_bie, 
      xue_li, xue_wei, zhuan_ye, 
      kao_shi_ke_mu, ji_shu_zi_ge, zhi_ye_zi_ge, 
      qi_ta, di_dian, dian_hua
      )
    values (#{jobCode,jdbcType=VARCHAR}, #{unitCode,jdbcType=VARCHAR}, #{unitName,jdbcType=VARCHAR}, 
      #{jobSplit,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{jobDesc,jdbcType=VARCHAR}, 
      #{needNums,jdbcType=VARCHAR}, #{ruWeiBiLi,jdbcType=VARCHAR}, #{laiYuanLeiBie,jdbcType=VARCHAR}, 
      #{xueLi,jdbcType=VARCHAR}, #{xueWei,jdbcType=VARCHAR}, #{zhuanYe,jdbcType=VARCHAR}, 
      #{kaoShiKeMu,jdbcType=VARCHAR}, #{jiShuZiGe,jdbcType=VARCHAR}, #{zhiYeZiGe,jdbcType=VARCHAR}, 
      #{qiTa,jdbcType=VARCHAR}, #{diDian,jdbcType=VARCHAR}, #{dianHua,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luoxiang.project.po.Jd202001" >
    insert into jd_2020_01
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobCode != null" >
        job_code,
      </if>
      <if test="unitCode != null" >
        unit_code,
      </if>
      <if test="unitName != null" >
        unit_name,
      </if>
      <if test="jobSplit != null" >
        job_split,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobDesc != null" >
        job_desc,
      </if>
      <if test="needNums != null" >
        need_nums,
      </if>
      <if test="ruWeiBiLi != null" >
        ru_wei_bi_li,
      </if>
      <if test="laiYuanLeiBie != null" >
        lai_yuan_lei_bie,
      </if>
      <if test="xueLi != null" >
        xue_li,
      </if>
      <if test="xueWei != null" >
        xue_wei,
      </if>
      <if test="zhuanYe != null" >
        zhuan_ye,
      </if>
      <if test="kaoShiKeMu != null" >
        kao_shi_ke_mu,
      </if>
      <if test="jiShuZiGe != null" >
        ji_shu_zi_ge,
      </if>
      <if test="zhiYeZiGe != null" >
        zhi_ye_zi_ge,
      </if>
      <if test="qiTa != null" >
        qi_ta,
      </if>
      <if test="diDian != null" >
        di_dian,
      </if>
      <if test="dianHua != null" >
        dian_hua,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobCode != null" >
        #{jobCode,jdbcType=VARCHAR},
      </if>
      <if test="unitCode != null" >
        #{unitCode,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null" >
        #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="jobSplit != null" >
        #{jobSplit,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null" >
        #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="needNums != null" >
        #{needNums,jdbcType=VARCHAR},
      </if>
      <if test="ruWeiBiLi != null" >
        #{ruWeiBiLi,jdbcType=VARCHAR},
      </if>
      <if test="laiYuanLeiBie != null" >
        #{laiYuanLeiBie,jdbcType=VARCHAR},
      </if>
      <if test="xueLi != null" >
        #{xueLi,jdbcType=VARCHAR},
      </if>
      <if test="xueWei != null" >
        #{xueWei,jdbcType=VARCHAR},
      </if>
      <if test="zhuanYe != null" >
        #{zhuanYe,jdbcType=VARCHAR},
      </if>
      <if test="kaoShiKeMu != null" >
        #{kaoShiKeMu,jdbcType=VARCHAR},
      </if>
      <if test="jiShuZiGe != null" >
        #{jiShuZiGe,jdbcType=VARCHAR},
      </if>
      <if test="zhiYeZiGe != null" >
        #{zhiYeZiGe,jdbcType=VARCHAR},
      </if>
      <if test="qiTa != null" >
        #{qiTa,jdbcType=VARCHAR},
      </if>
      <if test="diDian != null" >
        #{diDian,jdbcType=VARCHAR},
      </if>
      <if test="dianHua != null" >
        #{dianHua,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luoxiang.project.po.Jd202001Example" resultType="java.lang.Integer" >
    select count(*) from jd_2020_01
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jd_2020_01
    <set >
      <if test="record.jobCode != null" >
        job_code = #{record.jobCode,jdbcType=VARCHAR},
      </if>
      <if test="record.unitCode != null" >
        unit_code = #{record.unitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.unitName != null" >
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSplit != null" >
        job_split = #{record.jobSplit,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDesc != null" >
        job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.needNums != null" >
        need_nums = #{record.needNums,jdbcType=VARCHAR},
      </if>
      <if test="record.ruWeiBiLi != null" >
        ru_wei_bi_li = #{record.ruWeiBiLi,jdbcType=VARCHAR},
      </if>
      <if test="record.laiYuanLeiBie != null" >
        lai_yuan_lei_bie = #{record.laiYuanLeiBie,jdbcType=VARCHAR},
      </if>
      <if test="record.xueLi != null" >
        xue_li = #{record.xueLi,jdbcType=VARCHAR},
      </if>
      <if test="record.xueWei != null" >
        xue_wei = #{record.xueWei,jdbcType=VARCHAR},
      </if>
      <if test="record.zhuanYe != null" >
        zhuan_ye = #{record.zhuanYe,jdbcType=VARCHAR},
      </if>
      <if test="record.kaoShiKeMu != null" >
        kao_shi_ke_mu = #{record.kaoShiKeMu,jdbcType=VARCHAR},
      </if>
      <if test="record.jiShuZiGe != null" >
        ji_shu_zi_ge = #{record.jiShuZiGe,jdbcType=VARCHAR},
      </if>
      <if test="record.zhiYeZiGe != null" >
        zhi_ye_zi_ge = #{record.zhiYeZiGe,jdbcType=VARCHAR},
      </if>
      <if test="record.qiTa != null" >
        qi_ta = #{record.qiTa,jdbcType=VARCHAR},
      </if>
      <if test="record.diDian != null" >
        di_dian = #{record.diDian,jdbcType=VARCHAR},
      </if>
      <if test="record.dianHua != null" >
        dian_hua = #{record.dianHua,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jd_2020_01
    set job_code = #{record.jobCode,jdbcType=VARCHAR},
      unit_code = #{record.unitCode,jdbcType=VARCHAR},
      unit_name = #{record.unitName,jdbcType=VARCHAR},
      job_split = #{record.jobSplit,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      need_nums = #{record.needNums,jdbcType=VARCHAR},
      ru_wei_bi_li = #{record.ruWeiBiLi,jdbcType=VARCHAR},
      lai_yuan_lei_bie = #{record.laiYuanLeiBie,jdbcType=VARCHAR},
      xue_li = #{record.xueLi,jdbcType=VARCHAR},
      xue_wei = #{record.xueWei,jdbcType=VARCHAR},
      zhuan_ye = #{record.zhuanYe,jdbcType=VARCHAR},
      kao_shi_ke_mu = #{record.kaoShiKeMu,jdbcType=VARCHAR},
      ji_shu_zi_ge = #{record.jiShuZiGe,jdbcType=VARCHAR},
      zhi_ye_zi_ge = #{record.zhiYeZiGe,jdbcType=VARCHAR},
      qi_ta = #{record.qiTa,jdbcType=VARCHAR},
      di_dian = #{record.diDian,jdbcType=VARCHAR},
      dian_hua = #{record.dianHua,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from jd_2020_01
  </select>
</mapper>